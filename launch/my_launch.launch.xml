<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <!--Set environment variables that allow Gazebo to load the resources used 
        in simulation (GZ_SIM_RESOURCE_PATH is the environment variable that 
        is used to look for resources)-->
    <set_env name="GZ_SIM_RESOURCE_PATH" 
        value="$(find-pkg-share lab3_ros)/models:$(find-pkg-share lab3_ros)/media:$(find-pkg-share lab3_ros)/worlds"/>

    <!-- Spawn an empty world and then load the lab3_ros world in it 
        -r argument starts the simulation
        -v4 adds more verbose logging
        on_exit_shutdown supposedly shuts down everything else
     -->
    <include file='$(find-pkg-share ros_gz_sim)/launch/gz_sim.launch.py'>
        <arg name="gz_args" value="-r -v4 $(find-pkg-share lab3_ros)/worlds/lab3_ros.world"/>
        <arg name='on_exit_shutdown' value='true'/>
    </include>

    <!-- Spawn URDF robot in simulation -->
    <node name="spawn_robot_urdf" pkg="ros_gz_sim" exec="create" 
        args="-file $(find-pkg-share lab3_ros)/urdf/adeept.urdf 
              -x 0.0 -y 0.0 -z 0.5 -name my_robot" 
        output="screen"/>

    <!-- Add the gazebo bridge parameters -->
     <node name="ROS_GZ_config_bridge" pkg="ros_gz_bridge" exec="parameter_bridge"
        args="--ros-args -p config_file:=$(find-pkg-share lab3_ros)/config/gz_bridge.yaml"
        output="screen"
     />

     <node name="ROS_GZ_image_bridge" pkg="ros_gz_image" exec="image_bridge"
        args="/camera/image_raw" output="screen"
     />
</launch>